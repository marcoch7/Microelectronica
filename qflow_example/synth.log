Running yosys for verilog parsing and synthesis

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `map9v3.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `map9v3.v' to AST representation.
Generating RTLIL representation for module `\map9v3'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \map9v3

3.1.2. Analyzing design hierarchy..
Top module:  \map9v3
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\map9v3.$proc$map9v3.v:37$1'.

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\map9v3.$proc$map9v3.v:37$1'.
     1/14: $0\dp[8:0] [8:1]
     2/14: $0\dp[8:0] [0]
     3/14: $0\sr[7:0] [0]
     4/14: $0\sr[7:0] [2]
     5/14: $0\sr[7:0] [3]
     6/14: $0\sr[7:0] [4]
     7/14: $0\sr[7:0] [5]
     8/14: $0\sr[7:0] [6]
     9/14: $0\sr[7:0] [7]
    10/14: $0\startbuf[1:0]
    11/14: $0\state[2:0]
    12/14: $0\counter[7:0]
    13/14: $0\done[0:0]
    14/14: $0\sr[7:0] [1]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\map9v3.\dp' using process `\map9v3.$proc$map9v3.v:37$1'.
  created $adff cell `$procdff$122' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\done' using process `\map9v3.$proc$map9v3.v:37$1'.
  created $adff cell `$procdff$123' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\counter' using process `\map9v3.$proc$map9v3.v:37$1'.
  created $adff cell `$procdff$124' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\sr' using process `\map9v3.$proc$map9v3.v:37$1'.
  created $adff cell `$procdff$125' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\startbuf' using process `\map9v3.$proc$map9v3.v:37$1'.
  created $adff cell `$procdff$126' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\state' using process `\map9v3.$proc$map9v3.v:37$1'.
  created $adff cell `$procdff$127' with positive edge clock and positive level reset.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 7 empty switches in `\map9v3.$proc$map9v3.v:37$1'.
Removing empty process `map9v3.$proc$map9v3.v:37$1'.
Cleaned up 7 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$eq$map9v3.v:39$2' (1) in module `\map9v3' with constant driver `$eq$map9v3.v:39$2_Y = \reset'.
Replacing $eq cell `$eq$map9v3.v:50$3' in module `map9v3' with $logic_not.
Replacing $eq cell `$eq$map9v3.v:66$12' in module `map9v3' with $logic_not.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.5. Executing CHECK pass (checking for obvious problems).
checking module map9v3..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$102 (pure)
    Root of a mux tree: $procmux$114 (pure)
    Root of a mux tree: $procmux$120 (pure)
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$33 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$45 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$96 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 24 bits (of 32) from port A of cell map9v3.$sub$map9v3.v:51$4 ($sub).
Removed top 30 bits (of 32) from port B of cell map9v3.$add$map9v3.v:51$5 ($add).
Removed top 24 bits (of 32) from port Y of cell map9v3.$add$map9v3.v:51$5 ($add).
Removed top 24 bits (of 32) from port A of cell map9v3.$add$map9v3.v:51$5 ($add).
Removed top 2 bits (of 3) from port B of cell map9v3.$eq$map9v3.v:56$6 ($eq).
Removed top 31 bits (of 32) from port B of cell map9v3.$sub$map9v3.v:65$11 ($sub).
Removed top 24 bits (of 32) from port Y of cell map9v3.$sub$map9v3.v:65$11 ($sub).
Removed top 1 bits (of 3) from port B of cell map9v3.$eq$map9v3.v:70$13 ($eq).
Removed top 1 bits (of 3) from port B of cell map9v3.$eq$map9v3.v:75$14 ($eq).
Removed top 1 bits (of 2) from port B of cell map9v3.$eq$map9v3.v:80$16 ($eq).
Removed top 24 bits (of 32) from port Y of cell map9v3.$sub$map9v3.v:51$4 ($sub).
Removed top 24 bits (of 32) from wire map9v3.$add$map9v3.v:51$5_Y.
Removed top 24 bits (of 32) from wire map9v3.$sub$map9v3.v:65$11_Y.

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module map9v3:
  creating $macc model for $add$map9v3.v:51$5 ($add).
  creating $macc model for $sub$map9v3.v:51$4 ($sub).
  creating $macc model for $sub$map9v3.v:65$11 ($sub).
  merging $macc model for $sub$map9v3.v:51$4 into $add$map9v3.v:51$5.
  creating $alu model for $macc $sub$map9v3.v:65$11.
  creating $macc cell for $add$map9v3.v:51$5: $auto$alumacc.cc:354:replace_macc$130
  creating $alu cell for $sub$map9v3.v:65$11: $auto$alumacc.cc:470:replace_alu$131
  created 1 $alu and 1 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$102 (pure)
    Root of a mux tree: $procmux$114 (pure)
    Root of a mux tree: $procmux$120 (pure)
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$33 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$45 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$96 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
  removing unused `$sub' cell `$sub$map9v3.v:51$4'.

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$102 (pure)
    Root of a mux tree: $procmux$114 (pure)
    Root of a mux tree: $procmux$120 (pure)
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$33 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$45 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$96 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.10.15. Executing OPT_EXPR pass (perform const folding).

3.10.16. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register map9v3.state.

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\state' from module `\map9v3'.
  found $adff cell for state register: $procdff$127
  root of input selection tree: $0\state[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: $eq$map9v3.v:50$3_Y
  found ctrl input: $eq$map9v3.v:56$6_Y
  found ctrl input: $eq$map9v3.v:70$13_Y
  found ctrl input: $eq$map9v3.v:75$14_Y
  found ctrl input: $eq$map9v3.v:79$15_Y
  found ctrl input: $eq$map9v3.v:80$16_Y
  found state code: 3'100
  found state code: 3'011
  found ctrl input: $eq$map9v3.v:66$12_Y
  found state code: 3'010
  found state code: 3'001
  found ctrl output: $eq$map9v3.v:50$3_Y
  found ctrl output: $eq$map9v3.v:56$6_Y
  found ctrl output: $eq$map9v3.v:70$13_Y
  found ctrl output: $eq$map9v3.v:75$14_Y
  found ctrl output: $eq$map9v3.v:79$15_Y
  ctrl inputs: { $eq$map9v3.v:80$16_Y $eq$map9v3.v:66$12_Y }
  ctrl outputs: { $eq$map9v3.v:79$15_Y $eq$map9v3.v:75$14_Y $eq$map9v3.v:70$13_Y $eq$map9v3.v:56$6_Y $eq$map9v3.v:50$3_Y $0\state[2:0] }
  transition:      3'000 2'-- ->      3'001 8'00001001
  transition:      3'100 2'0- ->      3'100 8'10000100
  transition:      3'100 2'1- ->      3'000 8'10000000
  transition:      3'010 2'-- ->      3'011 8'00100011
  transition:      3'001 2'-0 ->      3'001 8'00010001
  transition:      3'001 2'-1 ->      3'010 8'00010010
  transition:      3'011 2'-- ->      3'100 8'01000100

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$134' from module `\map9v3'.

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
  removing unused `$logic_not' cell `$eq$map9v3.v:50$3'.
  removing unused `$eq' cell `$eq$map9v3.v:56$6'.
  removing unused `$eq' cell `$eq$map9v3.v:70$13'.
  removing unused `$eq' cell `$eq$map9v3.v:75$14'.
  removing unused `$eq' cell `$eq$map9v3.v:79$15'.
  removing unused `$mux' cell `$procmux$79'.
  removing unused `$mux' cell `$procmux$81'.
  removing unused `$mux' cell `$procmux$84'.
  removing unused `$mux' cell `$procmux$87'.
  removing unused `$mux' cell `$procmux$91'.
  removing unused `$mux' cell `$procmux$93'.
  removing unused `$mux' cell `$procmux$96'.
  removing unused `$adff' cell `$procdff$127'.

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$134' from module `\map9v3'.
  Removing unused output signal $0\state[2:0] [0].
  Removing unused output signal $0\state[2:0] [1].
  Removing unused output signal $0\state[2:0] [2].
  Removing unused output signal $eq$map9v3.v:79$15_Y.

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\state$134' from module `\map9v3' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1
  100 -> ---1-
  010 -> --1--
  001 -> -1---
  011 -> 1----

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\state$134' from module `\map9v3':
-------------------------------------

  Information on FSM $fsm$\state$134 (\state):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       5

  Input signals:
    0: $eq$map9v3.v:66$12_Y
    1: $eq$map9v3.v:80$16_Y

  Output signals:
    0: $eq$map9v3.v:50$3_Y
    1: $eq$map9v3.v:56$6_Y
    2: $eq$map9v3.v:70$13_Y
    3: $eq$map9v3.v:75$14_Y

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'--   ->     3 4'0001
      1:     1 2'1-   ->     0 4'0000
      2:     1 2'0-   ->     1 4'0000
      3:     2 2'--   ->     4 4'0100
      4:     3 2'-1   ->     2 4'0010
      5:     3 2'-0   ->     3 4'0010
      6:     4 2'--   ->     1 4'1000

-------------------------------------

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\state$134' from module `\map9v3'.

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$159' in module `map9v3' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$146' (1) in module `\map9v3' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$145 = $eq$map9v3.v:80$16_Y'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$150' in module `map9v3' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$155' (1) in module `\map9v3' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$154 = $eq$map9v3.v:66$12_Y'.

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$105' in module `map9v3' with or-gate.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$102 (pure)
    Root of a mux tree: $procmux$114 (pure)
    Root of a mux tree: $procmux$120 (pure)
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$33 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$45 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$75 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$162: { \state [0] $auto$fsm_map.cc:118:implement_pattern_cache$160 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$153: { \state [4] $auto$fsm_map.cc:118:implement_pattern_cache$151 }
  Optimizing cells in module \map9v3.
Performed a total of 2 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$102 (pure)
    Root of a mux tree: $procmux$114 (pure)
    Root of a mux tree: $procmux$120 (pure)
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$33 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$45 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$75 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.17.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.17.15. Executing OPT_EXPR pass (perform const folding).

3.17.16. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping map9v3.$xor$map9v3.v:64$7 ($xor) with simplemap.
Mapping map9v3.$xor$map9v3.v:64$8 ($xor) with simplemap.
Mapping map9v3.$xor$map9v3.v:64$9 ($xor) with simplemap.
Mapping map9v3.$not$map9v3.v:64$10 ($not) with simplemap.
Mapping map9v3.$eq$map9v3.v:66$12 ($logic_not) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:144:implement_pattern_cache$162 ($reduce_or) with simplemap.
Mapping map9v3.$eq$map9v3.v:80$16 ($eq) with simplemap.
Mapping map9v3.$procmux$18 ($mux) with simplemap.
Mapping map9v3.$procmux$21 ($mux) with simplemap.
Mapping map9v3.$procmux$24 ($mux) with simplemap.
Mapping map9v3.$procmux$27 ($mux) with simplemap.
Mapping map9v3.$procmux$30 ($mux) with simplemap.
Mapping map9v3.$procmux$33 ($mux) with simplemap.
Mapping map9v3.$procmux$36 ($mux) with simplemap.
Mapping map9v3.$procmux$39 ($mux) with simplemap.
Mapping map9v3.$procmux$42 ($mux) with simplemap.
Mapping map9v3.$procmux$45 ($mux) with simplemap.
Mapping map9v3.$procmux$48 ($mux) with simplemap.
Mapping map9v3.$procmux$51 ($mux) with simplemap.
Mapping map9v3.$procmux$54 ($mux) with simplemap.
Mapping map9v3.$procmux$57 ($mux) with simplemap.
Mapping map9v3.$procmux$60 ($mux) with simplemap.
Mapping map9v3.$procmux$63 ($mux) with simplemap.
Mapping map9v3.$procmux$66 ($mux) with simplemap.
Mapping map9v3.$procmux$69 ($mux) with simplemap.
Mapping map9v3.$procmux$72 ($mux) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:172:map_fsm$142 ($adff) with simplemap.
Mapping map9v3.$procmux$75 ($mux) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:121:implement_pattern_cache$148 ($and) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:121:implement_pattern_cache$161 ($and) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:77:implement_pattern_cache$150 ($not) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:77:implement_pattern_cache$159 ($not) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:121:implement_pattern_cache$152 ($and) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:121:implement_pattern_cache$157 ($and) with simplemap.
Mapping map9v3.$auto$fsm_map.cc:144:implement_pattern_cache$153 ($reduce_or) with simplemap.
Mapping map9v3.$procmux$99 ($mux) with simplemap.
Mapping map9v3.$procmux$102 ($mux) with simplemap.
Mapping map9v3.$procmux$105 ($or) with simplemap.
Mapping map9v3.$procmux$108 ($mux) with simplemap.
Mapping map9v3.$procmux$111 ($mux) with simplemap.

3.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 8
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8'.

3.18.3. Continuing TECHMAP pass.
Mapping map9v3.$auto$alumacc.cc:470:replace_alu$131 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8.
Mapping map9v3.$procmux$114 ($mux) with simplemap.
Mapping map9v3.$auto$alumacc.cc:354:replace_macc$130 ($macc) with maccmap.
  sub \N [8:1] (8 bits, unsigned)
  add 8'00000010 (8 bits, unsigned)
Mapping map9v3.$procmux$117 ($mux) with simplemap.
Mapping map9v3.$procmux$120 ($mux) with simplemap.
Mapping map9v3.$procdff$122 ($adff) with simplemap.
Mapping map9v3.$procdff$123 ($adff) with simplemap.
Mapping map9v3.$procdff$124 ($adff) with simplemap.
Mapping map9v3.$procdff$125 ($adff) with simplemap.
Mapping map9v3.$procdff$126 ($adff) with simplemap.
Mapping map9v3.$auto$maccmap.cc:55:add$313 ($not) with simplemap.

3.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 8
Parameter \B_WIDTH = 8
Parameter \Y_WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8'.

3.18.5. Continuing TECHMAP pass.
Mapping map9v3.$auto$maccmap.cc:240:synth$315 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$310 ($xor) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:263$311 ($xor) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309 ($and) with simplemap.

3.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=8'.

3.18.7. Executing PROC pass (convert processes to netlists).

3.18.7.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.7.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.7.3. Executing PROC_INIT pass (extract init attributes).

3.18.7.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.7.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$404'.
     1/16: $0\p[7:0] [6]
     2/16: $0\g[7:0] [6]
     3/16: $0\p[7:0] [4]
     4/16: $0\g[7:0] [4]
     5/16: $0\p[7:0] [2]
     6/16: $0\g[7:0] [2]
     7/16: $0\p[7:0] [5]
     8/16: $0\g[7:0] [5]
     9/16: $0\p[7:0] [7]
    10/16: $0\g[7:0] [7]
    11/16: $0\p[7:0] [3]
    12/16: $0\g[7:0] [3]
    13/16: $0\p[7:0] [1]
    14/16: $0\g[7:0] [1]
    15/16: $0\g[7:0] [0]
    16/16: $0\p[7:0] [0]

3.18.7.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=8.\g' from process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$404'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=8.\p' from process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$404'.

3.18.7.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.7.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$404'.
Cleaned up 0 empty switches.

3.18.8. Executing OPT pass (performing simple optimizations).

3.18.8.1. Executing OPT_EXPR pass (perform const folding).

3.18.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=8'.
Removed a total of 0 cells.

3.18.8.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=8..
  removing unused `$and' cell `$and$<techmap.v>:222$409'.
  removing unused `$and' cell `$and$<techmap.v>:222$421'.
  removing unused `$and' cell `$and$<techmap.v>:222$427'.
  removing unused `$and' cell `$and$<techmap.v>:230$430'.
  removing unused `$and' cell `$and$<techmap.v>:230$433'.
  removing unused `$and' cell `$and$<techmap.v>:230$436'.
  removing unused `$and' cell `$and$<techmap.v>:230$439'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

3.18.8.5. Finished fast OPT passes.

3.18.9. Continuing TECHMAP pass.
Mapping map9v3.$auto$alumacc.cc:470:replace_alu$131.lcu using $paramod\_90_lcu\WIDTH=8.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308 ($mux) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307 ($not) with simplemap.
Mapping map9v3.$auto$alumacc.cc:470:replace_alu$131.B_conv ($pos) with simplemap.
Mapping map9v3.$auto$alumacc.cc:470:replace_alu$131.A_conv ($pos) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$438 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$435 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$432 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$429 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$426 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$423 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$420 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$417 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$414 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$411 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$408 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:212$406 ($or) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$437 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$434 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$431 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$428 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$424 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$418 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$415 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$412 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$425 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$422 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$419 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$416 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$413 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$410 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$407 ($and) with simplemap.
Mapping map9v3.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:212$405 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360 ($xor) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:263$361 ($xor) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359 ($and) with simplemap.
Mapping map9v3.$auto$maccmap.cc:240:synth$315.lcu using $paramod\_90_lcu\WIDTH=8.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358 ($mux) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357 ($not) with simplemap.
Mapping map9v3.$auto$maccmap.cc:240:synth$315.B_conv ($pos) with simplemap.
Mapping map9v3.$auto$maccmap.cc:240:synth$315.A_conv ($pos) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:212$405 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$407 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$410 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$413 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$416 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$419 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$422 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$425 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:222$412 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:222$415 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:222$418 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:222$424 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$428 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$431 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$434 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$437 ($and) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:212$406 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$408 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$411 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$414 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$417 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$420 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$423 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$426 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:229$429 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:229$432 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:229$435 ($or) with simplemap.
Mapping map9v3.$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:229$438 ($or) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$451' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$443' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$382' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [3] = \counter [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$450' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$442' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$381' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [2] = \counter [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$449' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$441' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$380' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [1] = \counter [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$448' (1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$440' (101) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$379' (const_and) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$362' (?0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$310_Y [0] = \counter [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$483' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:212$405_Y = \counter [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$467' (0?) in module `\map9v3' with constant driver `$auto$alumacc.cc:484:replace_alu$133 [0] = \counter [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$455' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$447' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$386' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [7] = \counter [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$454' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$446' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$385' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [6] = \counter [6]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$453' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$445' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$384' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [5] = \counter [5]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$452' (0) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$307_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$444' (011) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$308_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$383' (?1) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$309_Y [4] = \counter [4]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$283' (double_invert) in module `\map9v3' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$158 = $auto$simplemap.cc:168:logic_reduce$219'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$227' (?0) in module `\map9v3' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$224 [1] = \startbuf [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$282' (double_invert) in module `\map9v3' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$149 = $auto$simplemap.cc:256:simplemap_eqne$228'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$517' (double_invert) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [0] = \N [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$509' (??0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [0] = $auto$rtlil.cc:1600:Not$314 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$492' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:263$361_Y [0] = $techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$518' (double_invert) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [1] = \N [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$510' (??0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [1] = $auto$rtlil.cc:1600:Not$314 [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$501' (1?) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [0] = $auto$rtlil.cc:1600:Not$314 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$525' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:212$405_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$541' (?0) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [0] = $auto$rtlil.cc:1600:Not$314 [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$519' (0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$511' (010) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$486' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [2] = $auto$rtlil.cc:1600:Not$314 [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$502' (1?) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [1] = $auto$rtlil.cc:1600:Not$314 [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$520' (0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$512' (010) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$487' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [3] = $auto$rtlil.cc:1600:Not$314 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$503' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$550' (0?) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [2] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$431_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$521' (0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$513' (010) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$488' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [4] = $auto$rtlil.cc:1600:Not$314 [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$504' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$527' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$410_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$543' (00) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$411_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$546' (0?) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [3] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$419_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$522' (0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$514' (010) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$489' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [5] = $auto$rtlil.cc:1600:Not$314 [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$505' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$551' (0?) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [4] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$434_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$523' (0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$515' (010) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$490' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [6] = $auto$rtlil.cc:1600:Not$314 [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$506' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$528' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$413_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$544' (00) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$414_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$549' (0?) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [5] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$428_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$524' (0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$not$<techmap.v>:258$357_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$516' (010) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$ternary$<techmap.v>:258$358_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$491' (?0) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:262$360_Y [7] = $auto$rtlil.cc:1600:Not$314 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$507' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$552' (0?) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [6] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:229$437_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$378' (0?) in module `\map9v3' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:263$311_Y [8] = $auto$alumacc.cc:484:replace_alu$133 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$531' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$422_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$508' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$and$<techmap.v>:260$359_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$529' (const_and) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$416_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$545' (00) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$417_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$547' (00) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.lcu.$or$<techmap.v>:221$423_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$548' (0?) in module `\map9v3' with constant driver `$auto$maccmap.cc:247:synth$318 [7] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$425_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$500' (0?) in module `\map9v3' with constant driver `$techmap$auto$maccmap.cc:240:synth$315.$xor$<techmap.v>:263$361_Y [8] = $techmap$auto$maccmap.cc:240:synth$315.lcu.$and$<techmap.v>:221$425_Y'.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$461'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$460'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$463'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$472'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$473'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$476'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$477'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$479'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$532'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$535'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$536'.

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\map9v3' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 187 wires to a netlist network with 42 inputs and 30 outputs.

3.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       20
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:       50
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:       14
ABC RESULTS:              OAI3 cells:        5
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       14
ABC RESULTS:        internal signals:      115
ABC RESULTS:           input signals:       42
ABC RESULTS:          output signals:       30
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$664' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$667' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$648' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$655' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$651' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$660' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$640' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$645' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$620' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$622' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$633' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$636' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$625' in module `map9v3'.
Optimizing away select inverter for $_MUX_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$629' in module `map9v3'.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
  Cell `$abc$553$auto$blifparse.cc:286:parse_blif$623' is identical to cell `$abc$553$auto$blifparse.cc:286:parse_blif$556'.
    Redirecting output \Y: $abc$553$n142 = $abc$553$n75
    Removing $_NOR_ cell `$abc$553$auto$blifparse.cc:286:parse_blif$623' from module `\map9v3'.
Removed a total of 1 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \map9v3

3.22.2. Analyzing design hierarchy..
Top module:  \map9v3
Removed 0 unused modules.

3.23. Printing statistics.

=== map9v3 ===

   Number of wires:                109
   Number of wire bits:            166
   Number of public wires:          10
   Number of public wire bits:      45
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                154
     $_AND_                         20
     $_AOI3_                         1
     $_DFF_PP0_                     32
     $_DFF_PP1_                      1
     $_MUX_                         50
     $_NAND_                         4
     $_NOR_                          7
     $_NOT_                         14
     $_OAI3_                         5
     $_OAI4_                         1
     $_OR_                           2
     $_XNOR_                         3
     $_XOR_                         14

3.24. Executing CHECK pass (checking for obvious problems).
checking module map9v3..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\map9v3':
  mapped 32 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 1 $_DFF_PP1_ cells to \DFFSR cells.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$676' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$677 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$676' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$678' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$679 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$678' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$680' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$681 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$680' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$682' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$683 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$682' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$684' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$685 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$684' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$686' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$687 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$686' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$688' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$689 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$688' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$690' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$691 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$690' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$692' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$693 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$692' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$694' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$695 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$694' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$696' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$697 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$696' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$698' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$699 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$698' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$700' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$701 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$700' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$702' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$703 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$702' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$704' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$705 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$704' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$706' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$707 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$706' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$708' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$709 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$708' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$710' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$711 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$710' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$712' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$713 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$712' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$714' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$715 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$714' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$716' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$717 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$716' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$718' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$719 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$718' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$720' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$721 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$720' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$722' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$723 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$722' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$724' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$725 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$724' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$726' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$727 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$726' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$728' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$729 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$728' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$730' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$731 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$730' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$732' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$733 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$732' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$734' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$735 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$734' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$736' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$737 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$736' from module `\map9v3'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$738' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$740'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$739 = $auto$rtlil.cc:1731:NotGate$741
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$738' from module `\map9v3'.
Removed a total of 32 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

5.8. Executing OPT_EXPR pass (perform const folding).

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\map9v3' to `<abc-temp-dir>/input.blif'..
Extracted 122 gates and 165 wires to a netlist network with 43 inputs and 31 outputs.

6.1.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu035/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.00 sec
ABC: Memory =    0.38 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        6
ABC RESULTS:           AOI21X1 cells:       13
ABC RESULTS:           AOI22X1 cells:        2
ABC RESULTS:             INVX1 cells:       34
ABC RESULTS:            MUX2X1 cells:        7
ABC RESULTS:           NAND2X1 cells:       11
ABC RESULTS:           NAND3X1 cells:        8
ABC RESULTS:            NOR2X1 cells:       21
ABC RESULTS:           OAI21X1 cells:       30
ABC RESULTS:           OAI22X1 cells:        2
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:           XNOR2X1 cells:        2
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:       91
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       31
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
No more expansions possible.
Removed 0 unused cells and 165 unused wires.

8. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port map9v3.N: Missing option -inpad.
Don't map input port map9v3.clock: Missing option -inpad.
Mapping port map9v3.counter using BUFX2.
Mapping port map9v3.done using BUFX2.
Mapping port map9v3.dp using BUFX2.
Don't map input port map9v3.reset: Missing option -inpad.
Mapping port map9v3.sr using BUFX2.
Don't map input port map9v3.start: Missing option -inpad.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \map9v3.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..

9.8. Executing OPT_EXPR pass (perform const folding).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing BLIF backend.

End of script. Logfile hash: e2fa445e09
CPU: user 0.33s system 0.05s, MEM: 37.48 MB total, 10.40 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 14% 18x opt_expr (0 sec), 13% 17x opt_clean (0 sec), ...
Cleaning up output syntax
Cleaning Up blif file syntax
Running blifFanout (iterative)

Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 33 (load 1192.21) from node _56_,
driven by INVX1 with strength 102.797 (fF driven at latency 200)
Top fanout load-to-strength ratio is 11.5978 (latency = 2319.56 ps)
Top input node fanout is 33 (load 443.748) from node clock.
Warning 1: load of 340.034 is 3.35521 times greater than strongest gate NAND3X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 9: load of 382.432 is 3.7161 times greater than strongest gate DFFSR
41 gates exceed specified minimum load.
18 buffers were added.
3 gates were changed.

Gate counts by drive strength:

	"" gates	In: 33    	Out: 33    	+0
	"1" gates	In: 131    	Out: 128    	-3
	"2" gates	In: 34    	Out: 34    	+0

gates resized: 21
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 11 (load 413.902) from node state<0>,
driven by DFFSR with strength 102.912 (fF driven at latency 200)
Top fanout load-to-strength ratio is 4.02189 (latency = 804.378 ps)
Top input node fanout is 5 (load 111.516) from node clock.
Warning 1: load of 340.034 is 3.35521 times greater than strongest gate NAND3X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 8: load of 423.902 is 4.11906 times greater than strongest gate DFFSR
40 gates exceed specified minimum load.
0 buffers were added.
8 gates were changed.

Gate counts by drive strength:

	"" gates	In: 33    	Out: 33    	+0
	"1" gates	In: 128    	Out: 128    	+0
	"2" gates	In: 52    	Out: 44    	-8
	"4" gates	In: 1    	Out: 9    	+8
	"8" gates	In: 2    	Out: 2    	+0

gates resized: 8
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 11 (load 501.584) from node state<0>,
driven by DFFSR with strength 102.912 (fF driven at latency 200)
Top fanout load-to-strength ratio is 4.02189 (latency = 804.378 ps)
Top input node fanout is 5 (load 111.516) from node clock.
Warning 1: load of 508.129 is 1.22899 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 511.584 is 1.23735 times greater than strongest gate BUFX4
Warning 6: load of 340.034 is 3.35521 times greater than strongest gate NAND3X1
Warning 13: load of 423.902 is 4.11906 times greater than strongest gate DFFSR
45 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"" gates	In: 33    	Out: 33    	+0
	"1" gates	In: 128    	Out: 128    	+0
	"2" gates	In: 44    	Out: 44    	+0
	"4" gates	In: 9    	Out: 9    	+0
	"8" gates	In: 2    	Out: 2    	+0

gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/marcoch7/Microelectronica/qflow_example/synthesis
Files:
   Verilog: /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.rtl.v
   Verilog: /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.rtlnopwr.v
   Spice:   /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on mié 4 nov 16:21:55 CST 2020
Running blif2cel.tcl
Loaded LEF file (/usr/share/qflow/tech/osu035/osu035_stdcells.lef) for reading...
Loaded BLIF file (/home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.blif) for reading ...
Loaded CEL file (/home/marcoch7/Microelectronica/qflow_example/layout/map9v3.cel) for writing...
1st pass of blif file /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.blif. . .
Reading macros from LEF file. . .
Parsing macro AND2X2:  Ports are:
parse_pin
macroname: AND2X2, pinname: A
Port type: INPUT 
A -240 -261 1
parse_pin
macroname: AND2X2, pinname: B
Port type: INPUT 
B -80 -100 1
parse_pin
macroname: AND2X2, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: AND2X2, pinname: Y
Port type: OUTPUT 
Y 179 -680 1
parse_pin
macroname: AND2X2, pinname: vdd
Port type: INOUT 
vdd 80 590 1
Parsing macro AOI21X1:  Ports are:
parse_pin
macroname: AOI21X1, pinname: A
Port type: INPUT 
A -160 -70 1
parse_pin
macroname: AOI21X1, pinname: B
Port type: INPUT 
B -80 -261 1
parse_pin
macroname: AOI21X1, pinname: C
Port type: INPUT 
C 240 -501 1
parse_pin
macroname: AOI21X1, pinname: gnd
Port type: INOUT 
gnd 240 -870 1
parse_pin
macroname: AOI21X1, pinname: Y
Port type: OUTPUT 
Y 80 -680 1
parse_pin
macroname: AOI21X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro AOI22X1:  Ports are:
parse_pin
macroname: AOI22X1, pinname: A
Port type: INPUT 
A -240 -70 1
parse_pin
macroname: AOI22X1, pinname: B
Port type: INPUT 
B -160 -261 1
parse_pin
macroname: AOI22X1, pinname: C
Port type: INPUT 
C 320 -61 1
parse_pin
macroname: AOI22X1, pinname: D
Port type: INPUT 
D 140 -180 1
parse_pin
macroname: AOI22X1, pinname: gnd
Port type: INOUT 
gnd 320 -770 1
parse_pin
macroname: AOI22X1, pinname: Y
Port type: OUTPUT 
Y 10 -431 1
parse_pin
macroname: AOI22X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro BUFX2:  Ports are:
parse_pin
macroname: BUFX2, pinname: A
Port type: INPUT 
A -160 -140 1
parse_pin
macroname: BUFX2, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: BUFX2, pinname: Y
Port type: OUTPUT 
Y 170 0 1
parse_pin
macroname: BUFX2, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro BUFX4:  Ports are:
parse_pin
macroname: BUFX4, pinname: A
Port type: INPUT 
A -230 -100 1
parse_pin
macroname: BUFX4, pinname: gnd
Port type: INOUT 
gnd 240 -770 1
parse_pin
macroname: BUFX4, pinname: Y
Port type: OUTPUT 
Y 89 -300 1
parse_pin
macroname: BUFX4, pinname: vdd
Port type: INOUT 
vdd 240 570 1
Parsing macro INVX1:  Ports are:
parse_pin
macroname: INVX1, pinname: A
Port type: INPUT 
A -80 -540 1
parse_pin
macroname: INVX1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: INVX1, pinname: Y
Port type: OUTPUT 
Y 80 0 1
parse_pin
macroname: INVX1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro INVX4:  Ports are:
parse_pin
macroname: INVX4, pinname: A
Port type: INPUT 
A -160 -340 1
parse_pin
macroname: INVX4, pinname: gnd
Port type: INOUT 
gnd 160 -770 1
parse_pin
macroname: INVX4, pinname: Y
Port type: OUTPUT 
Y 0 0 1
parse_pin
macroname: INVX4, pinname: vdd
Port type: INOUT 
vdd 160 570 1
Parsing macro INVX8:  Ports are:
parse_pin
macroname: INVX8, pinname: A
Port type: INPUT 
A -320 -340 1
parse_pin
macroname: INVX8, pinname: gnd
Port type: INOUT 
gnd 0 -770 1
parse_pin
macroname: INVX8, pinname: Y
Port type: OUTPUT 
Y -160 410 1
parse_pin
macroname: INVX8, pinname: vdd
Port type: INOUT 
vdd 0 570 1
Parsing macro NAND2X1:  Ports are:
parse_pin
macroname: NAND2X1, pinname: A
Port type: INPUT 
A -160 -340 1
parse_pin
macroname: NAND2X1, pinname: B
Port type: INPUT 
B 160 140 1
parse_pin
macroname: NAND2X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: NAND2X1, pinname: Y
Port type: OUTPUT 
Y 100 -680 1
parse_pin
macroname: NAND2X1, pinname: vdd
Port type: INOUT 
vdd 160 770 1
Parsing macro NAND3X1:  Ports are:
parse_pin
macroname: NAND3X1, pinname: A
Port type: INPUT 
A -240 60 1
parse_pin
macroname: NAND3X1, pinname: B
Port type: INPUT 
B -40 -100 1
parse_pin
macroname: NAND3X1, pinname: C
Port type: INPUT 
C 80 260 1
parse_pin
macroname: NAND3X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: NAND3X1, pinname: Y
Port type: OUTPUT 
Y -80 680 1
parse_pin
macroname: NAND3X1, pinname: vdd
Port type: INOUT 
vdd 80 790 1
Parsing macro NOR2X1:  Ports are:
parse_pin
macroname: NOR2X1, pinname: A
Port type: INPUT 
A -160 -540 1
parse_pin
macroname: NOR2X1, pinname: B
Port type: INPUT 
B 160 -61 1
parse_pin
macroname: NOR2X1, pinname: gnd
Port type: INOUT 
gnd 160 -870 1
parse_pin
macroname: NOR2X1, pinname: Y
Port type: OUTPUT 
Y 0 -300 1
parse_pin
macroname: NOR2X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro OAI21X1:  Ports are:
parse_pin
macroname: OAI21X1, pinname: A
Port type: INPUT 
A -160 -330 1
parse_pin
macroname: OAI21X1, pinname: B
Port type: INPUT 
B -80 -140 1
parse_pin
macroname: OAI21X1, pinname: C
Port type: INPUT 
C 160 300 1
parse_pin
macroname: OAI21X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: OAI21X1, pinname: Y
Port type: OUTPUT 
Y 50 -100 1
parse_pin
macroname: OAI21X1, pinname: vdd
Port type: INOUT 
vdd 179 770 1
Parsing macro OAI22X1:  Ports are:
parse_pin
macroname: OAI22X1, pinname: A
Port type: INPUT 
A -240 -330 1
parse_pin
macroname: OAI22X1, pinname: B
Port type: INPUT 
B -160 -140 1
parse_pin
macroname: OAI22X1, pinname: C
Port type: INPUT 
C 320 -261 1
parse_pin
macroname: OAI22X1, pinname: D
Port type: INPUT 
D 160 -140 1
parse_pin
macroname: OAI22X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: OAI22X1, pinname: Y
Port type: OUTPUT 
Y 0 -300 1
parse_pin
macroname: OAI22X1, pinname: vdd
Port type: INOUT 
vdd 320 570 1
Parsing macro OR2X2:  Ports are:
parse_pin
macroname: OR2X2, pinname: A
Port type: INPUT 
A -240 -540 1
parse_pin
macroname: OR2X2, pinname: B
Port type: INPUT 
B -40 -221 1
parse_pin
macroname: OR2X2, pinname: gnd
Port type: INOUT 
gnd 80 -790 1
parse_pin
macroname: OR2X2, pinname: Y
Port type: OUTPUT 
Y 240 -100 1
parse_pin
macroname: OR2X2, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro XOR2X1:  Ports are:
parse_pin
macroname: XOR2X1, pinname: A
Port type: INPUT 
A -410 -290 1
parse_pin
macroname: XOR2X1, pinname: B
Port type: INPUT 
B 439 -300 1
parse_pin
macroname: XOR2X1, pinname: gnd
Port type: INOUT 
gnd -310 -711 1
parse_pin
macroname: XOR2X1, pinname: Y
Port type: OUTPUT 
Y 0 -700 1
parse_pin
macroname: XOR2X1, pinname: vdd
Port type: INOUT 
vdd -300 640 1
Parsing macro MUX2X1:  Ports are:
parse_pin
macroname: MUX2X1, pinname: A
Port type: INPUT 
A 240 -61 1
parse_pin
macroname: MUX2X1, pinname: B
Port type: INPUT 
B -240 -140 1
parse_pin
macroname: MUX2X1, pinname: S
Port type: INPUT 
S -400 -140 1
parse_pin
macroname: MUX2X1, pinname: gnd
Port type: INOUT 
gnd 280 -730 1
parse_pin
macroname: MUX2X1, pinname: Y
Port type: OUTPUT 
Y 19 500 1
parse_pin
macroname: MUX2X1, pinname: vdd
Port type: INOUT 
vdd 280 570 1
Parsing macro XNOR2X1:  Ports are:
parse_pin
macroname: XNOR2X1, pinname: A
Port type: INPUT 
A -210 -360 1
parse_pin
macroname: XNOR2X1, pinname: B
Port type: INPUT 
B 439 -300 1
parse_pin
macroname: XNOR2X1, pinname: gnd
Port type: INOUT 
gnd -310 -711 1
parse_pin
macroname: XNOR2X1, pinname: Y
Port type: OUTPUT 
Y 50 -500 1
parse_pin
macroname: XNOR2X1, pinname: vdd
Port type: INOUT 
vdd -300 640 1
Parsing macro DFFSR:  Ports are:
parse_pin
macroname: DFFSR, pinname: Q
Port type: OUTPUT 
Q 1520 449 1
parse_pin
macroname: DFFSR, pinname: CLK
Port type: INPUT 
CLK -41 -501 1
parse_pin
macroname: DFFSR, pinname: R
Port type: INPUT 
R -1040 -90 1
parse_pin
macroname: DFFSR, pinname: S
Port type: INPUT 
S -1020 59 1
parse_pin
macroname: DFFSR, pinname: D
Port type: INPUT 
D -400 -340 1
parse_pin
macroname: DFFSR, pinname: gnd
Port type: INOUT 
gnd -400 -870 1
parse_pin
macroname: DFFSR, pinname: vdd
Port type: INOUT 
vdd -1360 770 1
2nd pass of blif file. . .
3rd pass of blif file. . .
Done!
No map9v3.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement

twflow version:2.1 date:Mon May 25 21:15:08 EDT 1992
Authors: Bill Swartz, Carl Sechen
         Yale University

syntax version:v1.1 date:Mon May 25 21:11:10 EDT 1992
TimberWolf System Syntax Checker
Authors: Carl Sechen, Kai-Win Lee, Bill Swartz,
         Dahe Chen, and Jimmy Lam
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
No syntax errors were found

syntax terminated normally with no errors and 0 warning[s]


----------------------------
Total stdcells     :216
Total cell width   :2.17e+05
Total cell height  :4.32e+05
Total cell area    :4.34e+08
Total core area    :4.34e+08
Average cell height:2.00e+03


nocut - replacement for Mincut version:v1.0 date:Mon May 25 21:09:40 EDT 1992
TimberWolf System Floorplan Setup Program
Authors: Carl Sechen, Bill Swartz,
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Splitting map9v3.cel into map9v3.scel and map9v3.mcel...
	done!


nocut - replacement for Mincut terminated normally with no errors and 0 warning[s]


TimberWolfMC version:v2.2 date:Mon May 25 21:18:34 EDT 1992
Authors: Carl Sechen, Bill Swartz, Kai-Win Lee
         Dahe Chen, and Jimmy Lam
         Yale University

config version:v1.0 date:Mon May 25 20:57:18 EDT 1992
Row configuration program
    Yale University


config switches:
	Graphics mode on
	config will inherit window



config terminated normally with no errors and 0 warning[s]


TimberWolfMC terminated normally with no errors and 0 warning[s]



TimberWolfSC switches:
	Graphics mode on
	TimberWolfSC will inherit window

TimberWolfSC version:v6.0 date:Mon May 25 21:19:07 EDT 1992
Row-Based Placement and Global Routing Program
Authors: Carl Sechen, Kai-Win Lee, and Bill Swartz,
         Yale University
  0 
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 
 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30 
 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45 
 46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75 
 76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 
 91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 
106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 
136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 
151 152 153 154 155 156 157 158 
 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   77
 tracks =  67 at attempts =  1000
 tracks =  67 at attempts =  2000
 tracks =  67 at attempts =  3000
 tracks =  67 at attempts =  4000
 tracks =  67 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   73
 tracks =  62 at attempts =  1000
 tracks =  62 at attempts =  2000
 tracks =  62 at attempts =  3000
 tracks =  62 at attempts =  4000
 tracks =  62 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   74
 tracks =  63 at attempts =  1000
 tracks =  63 at attempts =  2000
 tracks =  63 at attempts =  3000
 tracks =  63 at attempts =  4000
 tracks =  63 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   81
 tracks =  79 at attempts =  1000
 tracks =  79 at attempts =  2000
 tracks =  79 at attempts =  3000
 tracks =  79 at attempts =  4000
 tracks =  79 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   68
 tracks =  64 at attempts =  1000
 tracks =  64 at attempts =  2000
 tracks =  64 at attempts =  3000
 tracks =  64 at attempts =  4000
 tracks =  64 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   72
 tracks =  66 at attempts =  1000
 tracks =  66 at attempts =  2000
 tracks =  66 at attempts =  3000
 tracks =  66 at attempts =  4000
 tracks =  66 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   68
 tracks =  62 at attempts =  1000
 tracks =  62 at attempts =  2000
 tracks =  62 at attempts =  3000
 tracks =  62 at attempts =  4000
 tracks =  62 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 24800
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:1   Its length is:24160
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =   82
 tracks =  82 at attempts =  1000
 tracks =  82 at attempts =  2000
 tracks =  82 at attempts =  3000
 tracks =  82 at attempts =  4000
 tracks =  82 at attempts =  5000
 removing redundant feed-through pins
 the connectivity of all the nets is verified


***********************************************
*ACTUAL* FINAL NUMBER OF ROUTING TRACKS: 62
***********************************************


TimberWolfSC terminated normally with no errors and 0 warning[s]


twflow terminated normally with no errors and 0 warning[s]

Running getfillcell.tcl
Using cell FILL for fill
Running place2def.tcl
Limits: xbot = -750.0 ybot = -530.0 xtop = 24110.0 ytop = 18130.0
Core values: 80.0 100 24240.0 18100
Offsets: 80.0 100
4 routing layers
94 horizontal tracks from -400.0 to 18400.0 step 200 (M1, M3, ...)
157 vertical tracks from -480.0 to 24640.0 step 160.0 (M2, M4, ...)
Done with place2def.tcl
Running addspacers.tcl  map9v3 /usr/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Running addspacers.tcl
Reading FILL macros from LEF file.
Reading DEF file map9v3.def. . .
Number of rows is 9
Longest row has width 242.4 um
Analysis of DEF file:
Number of components = 216
New number of components = 219
Number of rows = 9
Done with addspacers.tcl
Running blifanno.tcl
Reading DEF file map9v3.def. . .
Done with blifanno.tcl

Generating RTL verilog and SPICE netlist file in directory
   /home/marcoch7/Microelectronica/qflow_example/synthesis
Files:
   Verilog: /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.rtl.v
   Verilog: /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.rtlnopwr.v
   Spice:   /home/marcoch7/Microelectronica/qflow_example/synthesis/map9v3.spc

Running blif2Verilog.
Running blif2BSpice.
Placement script ended on mié 4 nov 16:21:57 CST 2020
Qrouter detail maze router version 1.3.80.T
No .cfg file specified, continuing without.
Reading LEF data from file /usr/share/qflow/tech/osu035/osu035_stdcells.lef.
LEF Read, Line 106: Don't know how to parse layer "via1"
LEF Read, Line 107: No layer defined for RECT.
LEF Read, Line 115: Don't know how to parse layer "via2"
LEF Read, Line 116: No layer defined for RECT.
LEF Read, Line 124: Don't know how to parse layer "via3"
LEF Read, Line 125: No layer defined for RECT.
LEF Read, Line 131: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF Read, Line 135: Unknown keyword "OVERHANG" in LEF file; ignoring.
LEF Read, Line 136: Unknown keyword "METALOVERHANG" in LEF file; ignoring.
LEF Read, Line 140: Unknown keyword "OVERHANG" in LEF file; ignoring.
LEF Read, Line 141: Unknown keyword "METALOVERHANG" in LEF file; ignoring.
LEF Read, Line 142: Don't know how to parse layer "via1"
LEF Read, Line 143: No layer defined for RECT.
LEF Read, Line 147: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF Read, Line 151: Unknown keyword "OVERHANG" in LEF file; ignoring.
LEF Read, Line 152: Unknown keyword "METALOVERHANG" in LEF file; ignoring.
LEF Read, Line 156: Unknown keyword "OVERHANG" in LEF file; ignoring.
LEF Read, Line 157: Unknown keyword "METALOVERHANG" in LEF file; ignoring.
LEF Read, Line 158: Don't know how to parse layer "via2"
LEF Read, Line 159: No layer defined for RECT.
LEF Read, Line 163: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF Read, Line 167: Unknown keyword "OVERHANG" in LEF file; ignoring.
LEF Read, Line 168: Unknown keyword "METALOVERHANG" in LEF file; ignoring.
LEF Read, Line 172: Unknown keyword "OVERHANG" in LEF file; ignoring.
LEF Read, Line 173: Unknown keyword "METALOVERHANG" in LEF file; ignoring.
LEF Read, Line 174: Don't know how to parse layer "via3"
LEF Read, Line 175: No layer defined for RECT.
LEF Read, Line 179: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF Read, Line 186: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF Read, Line 193: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF Read, Line 200: Unknown keyword "GENERATE" in LEF file; ignoring.
LEF file:  Defines site corner (ignored)
LEF file:  Defines site IO (ignored)
LEF file:  Defines site core (ignored)
LEF Read, Line 235: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 244: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 277: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 297: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 345: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 365: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 420: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 443: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 499: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 522: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 556: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 575: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 611: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 632: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 674: Don't know how to parse layer "via1"
LEF Read, Line 700: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 713: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 766: Don't know how to parse layer "via1"
LEF Read, Line 809: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 835: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 908: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 921: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 970: Don't know how to parse layer "via1"
LEF Read, Line 1054: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1068: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1115: Don't know how to parse layer "via1"
LEF Read, Line 1140: Don't know how to parse layer "via1"
LEF Read, Line 1188: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1200: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1235: Don't know how to parse layer "via1"
LEF Read, Line 1258: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1275: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1301: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1318: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1344: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1362: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1389: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1412: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1447: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1466: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1507: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1531: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1565: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1587: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1630: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1651: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1706: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1728: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1771: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1793: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1838: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1859: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1902: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1923: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1968: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 1989: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2044: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2067: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2109: Don't know how to parse layer "via1"
LEF Read, Line 2151: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2174: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2210: Don't know how to parse layer "via1"
LEF Read, Line 2233: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2256: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2295: Don't know how to parse layer "via1"
LEF Read, Line 2340: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2351: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read, Line 2374: Don't know how to parse layer "via1"
LEF Read, Line 2437: Unknown keyword "SHAPE" in LEF file; ignoring.
LEF Read:  Further errors will not be reported.
LEF read: Processed 3179 lines.
LEF Read: encountered 110 errors total.
Multiple vertical route layers at different pitches.  Using smaller pitch 1.6, will route on 1-of-N tracks if necessary.
Reading DEF data from file map9v3.def.
Diagnostic: Design name: "map9v3"
Multiple vertical route layers at different pitches.  Using pitch 1.6 and routing on 1-of-N tracks for larger pitches.
Multiple vertical route layers at different pitches.  Using pitch 1.6 and routing on 1-of-N tracks for larger pitches.
  Processed 219 subcell instances total.
  Processed 38 pins total.
  Processed 229 nets total.
DEF read: Processed 1326 lines.
Output scale = microns / 100, precision 1
There are 229 nets in this design.
*** Running stage1 routing with defaults
Finished routing net vdd
Nets remaining: 228
Finished routing net state<0>
Nets remaining: 227
Finished routing net _111_
Nets remaining: 226
Finished routing net clock_bF$buf4
Nets remaining: 225
Finished routing net clock_bF$buf3
Nets remaining: 224
Finished routing net clock_bF$buf2
Nets remaining: 223
Finished routing net _56__bF$buf4
Nets remaining: 222
Finished routing net _56__bF$buf3
Nets remaining: 221
Finished routing net _56__bF$buf2
Nets remaining: 220
Finished routing net clock_bF$buf1
Nets remaining: 219
Finished routing net clock_bF$buf0
Nets remaining: 218
Finished routing net _56__bF$buf1
Nets remaining: 217
Finished routing net _56__bF$buf0
Nets remaining: 216
Finished routing net state<3>
Nets remaining: 215
Finished routing net _98__bF$buf3
Nets remaining: 214
Finished routing net _98__bF$buf2
Nets remaining: 213
Finished routing net _98__bF$buf1
Nets remaining: 212
Finished routing net clock
Nets remaining: 211
Finished routing net _56_
Nets remaining: 210
Finished routing net _97__bF$buf3
Nets remaining: 209
Finished routing net _117_<2>
Nets remaining: 208
Finished routing net _120_<3>
Nets remaining: 207
Finished routing net _120_<4>
Nets remaining: 206
Finished routing net _120_<5>
Nets remaining: 205
Finished routing net _41_
Nets remaining: 204
Finished routing net _44_
Nets remaining: 203
Finished routing net _48_
Nets remaining: 202
Finished routing net _57_
Nets remaining: 201
Finished routing net N<5>
Nets remaining: 200
Finished routing net _98_
Nets remaining: 199
Finished routing net _98__bF$buf0
Nets remaining: 198
Finished routing net _97_
Nets remaining: 197
Finished routing net _97__bF$buf2
Nets remaining: 196
Finished routing net _97__bF$buf1
Nets remaining: 195
Finished routing net _97__bF$buf0
Nets remaining: 194
Finished routing net _117_<3>
Nets remaining: 193
Finished routing net _117_<4>
Nets remaining: 192
Finished routing net _117_<6>
Nets remaining: 191
Finished routing net _117_<0>
Nets remaining: 190
Finished routing net _120_<0>
Nets remaining: 189
Finished routing net _120_<7>
Nets remaining: 188
Finished routing net N<3>
Nets remaining: 187
Finished routing net _99_
Nets remaining: 186
Finished routing net _117_<5>
Nets remaining: 185
Finished routing net _101_
Nets remaining: 184
Finished routing net _117_<7>
Nets remaining: 183
Finished routing net _117_<1>
Nets remaining: 182
Finished routing net _103_
Nets remaining: 181
Finished routing net state<2>
Nets remaining: 180
Finished routing net _120_<1>
Nets remaining: 179
Finished routing net _120_<2>
Nets remaining: 178
Finished routing net _9_
Nets remaining: 177
Finished routing net _11_
Nets remaining: 176
Finished routing net _13_
Nets remaining: 175
Finished routing net _120_<6>
Nets remaining: 174
Finished routing net _17_
Nets remaining: 173
Finished routing net N<1>
Nets remaining: 172
Finished routing net _42_
Nets remaining: 171
Finished routing net N<4>
Nets remaining: 170
Finished routing net N<6>
Nets remaining: 169
Finished routing net N<7>
Nets remaining: 168
Finished routing net _100_
Nets remaining: 167
Finished routing net _102_
Nets remaining: 166
Finished routing net _105_
Nets remaining: 165
Finished routing net state<4>
Nets remaining: 164
Finished routing net state<1>
Nets remaining: 163
Finished routing net startbuf<0>
Nets remaining: 162
Finished routing net _109_
Nets remaining: 161
Finished routing net _119_<1>
Nets remaining: 160
Finished routing net _119_<2>
Nets remaining: 159
Finished routing net _114_
Nets remaining: 158
Finished routing net _119_<3>
Nets remaining: 157
Finished routing net _116_
Nets remaining: 156
Finished routing net _119_<4>
Nets remaining: 155
Finished routing net _119_<5>
Nets remaining: 154
Finished routing net _119_<6>
Nets remaining: 153
Finished routing net _119_<7>
Nets remaining: 152
Finished routing net _15_
Nets remaining: 151
Finished routing net _119_<8>
Nets remaining: 150
Finished routing net _119_<0>
Nets remaining: 149
Finished routing net _37_
Nets remaining: 148
Finished routing net N<2>
Nets remaining: 147
Finished routing net _50_
Nets remaining: 146
Failed to route net _59_
Finished routing net _64_
Nets remaining: 145
Finished routing net _67_
Nets remaining: 144
Finished routing net _71_
Nets remaining: 143
Finished routing net _73_
Nets remaining: 142
Finished routing net _77_
Nets remaining: 141
Finished routing net _78_
Nets remaining: 140
Finished routing net _81_
Nets remaining: 139
Finished routing net _85_
Nets remaining: 138
Finished routing net N<8>
Nets remaining: 137
Finished routing net _118_
Nets remaining: 136
Finished routing net _104_
Nets remaining: 135
Finished routing net _6_
Nets remaining: 134
Finished routing net _106_
Nets remaining: 133
Finished routing net _107_
Nets remaining: 132
Finished routing net _108_
Nets remaining: 131
Finished routing net startbuf<1>
Nets remaining: 130
Finished routing net _7_
Nets remaining: 129
Finished routing net _110_
Nets remaining: 128
Finished routing net _112_
Nets remaining: 127
Finished routing net _2_<1>
Nets remaining: 126
Finished routing net _113_
Nets remaining: 125
Finished routing net _2_<2>
Nets remaining: 124
Finished routing net _115_
Nets remaining: 123
Finished routing net _2_<3>
Nets remaining: 122
Finished routing net _8_
Nets remaining: 121
Finished routing net _2_<4>
Nets remaining: 120
Finished routing net _10_
Nets remaining: 119
Finished routing net _2_<5>
Nets remaining: 118
Finished routing net _12_
Nets remaining: 117
Finished routing net _2_<6>
Nets remaining: 116
Finished routing net _14_
Nets remaining: 115
Finished routing net _2_<7>
Nets remaining: 114
Finished routing net _16_
Nets remaining: 113
Finished routing net _2_<8>
Nets remaining: 112
Finished routing net _18_
Nets remaining: 111
Finished routing net N<0>
Nets remaining: 110
Finished routing net _19_
Nets remaining: 109
Finished routing net _2_<0>
Nets remaining: 108
Finished routing net _20_
Nets remaining: 107
Finished routing net _21_
Nets remaining: 106
Finished routing net _22_
Nets remaining: 105
Finished routing net _23_
Nets remaining: 104
Finished routing net _24_
Nets remaining: 103
Finished routing net _25_
Nets remaining: 102
Finished routing net _26_
Nets remaining: 101
Finished routing net _27_
Nets remaining: 100
Finished routing net _28_
Nets remaining: 99
Finished routing net _29_
Nets remaining: 98
Finished routing net _3_<0>
Nets remaining: 97
Finished routing net _30_
Nets remaining: 96
Finished routing net _3_<2>
Nets remaining: 95
Finished routing net _31_
Nets remaining: 94
Finished routing net _3_<3>
Nets remaining: 93
Finished routing net _32_
Nets remaining: 92
Finished routing net _3_<4>
Nets remaining: 91
Finished routing net _33_
Nets remaining: 90
Finished routing net _3_<5>
Nets remaining: 89
Finished routing net _34_
Nets remaining: 88
Finished routing net _3_<6>
Nets remaining: 87
Finished routing net _35_
Nets remaining: 86
Finished routing net _3_<7>
Nets remaining: 85
Finished routing net _36_
Nets remaining: 84
Finished routing net _38_
Nets remaining: 83
Finished routing net _39_
Nets remaining: 82
Finished routing net _0_<0>
Nets remaining: 81
Finished routing net _40_
Nets remaining: 80
Finished routing net _43_
Nets remaining: 79
Finished routing net _45_
Nets remaining: 78
Finished routing net _46_
Nets remaining: 77
Finished routing net _47_
Nets remaining: 76
Finished routing net _0_<1>
Nets remaining: 75
Finished routing net _49_
Nets remaining: 74
Finished routing net _51_
Nets remaining: 73
Finished routing net _52_
Nets remaining: 72
Finished routing net _53_
Nets remaining: 71
Finished routing net _0_<2>
Nets remaining: 70
Finished routing net _54_
Nets remaining: 69
Finished routing net _55_
Nets remaining: 68
Finished routing net _58_
Nets remaining: 67
Finished routing net _60_
Nets remaining: 66
Finished routing net _61_
Nets remaining: 65
Finished routing net _62_
Nets remaining: 64
Finished routing net _0_<3>
Nets remaining: 63
Finished routing net _63_
Nets remaining: 62
Finished routing net _65_
Nets remaining: 61
Finished routing net _66_
Nets remaining: 60
Finished routing net _68_
Nets remaining: 59
Finished routing net _69_
Nets remaining: 58
Finished routing net _0_<4>
Nets remaining: 57
Finished routing net _70_
Nets remaining: 56
Finished routing net _72_
Nets remaining: 55
Finished routing net _74_
Nets remaining: 54
Finished routing net _75_
Nets remaining: 53
Finished routing net _76_
Nets remaining: 52
Finished routing net _0_<5>
Nets remaining: 51
Finished routing net _79_
Nets remaining: 50
Finished routing net _80_
Nets remaining: 49
Finished routing net _82_
Nets remaining: 48
Finished routing net _83_
Nets remaining: 47
Finished routing net _84_
Nets remaining: 46
Finished routing net _86_
Nets remaining: 45
Finished routing net _87_
Nets remaining: 44
Finished routing net _0_<6>
Nets remaining: 43
Finished routing net _88_
Nets remaining: 42
Finished routing net _89_
Nets remaining: 41
Failed to route net _90_
Finished routing net _91_
Nets remaining: 40
Finished routing net _92_
Nets remaining: 39
Finished routing net _0_<7>
Nets remaining: 38
Finished routing net _93_
Nets remaining: 37
Finished routing net _94_
Nets remaining: 36
Finished routing net _95_
Nets remaining: 35
Finished routing net _1_
Nets remaining: 34
Finished routing net _96_
Nets remaining: 33
Finished routing net _3_<1>
Nets remaining: 32
Finished routing net _4_
Nets remaining: 31
Finished routing net _5_
Nets remaining: 30
Finished routing net reset
Nets remaining: 29
Finished routing net counter<0>
Nets remaining: 28
Finished routing net counter<1>
Nets remaining: 27
Finished routing net counter<2>
Nets remaining: 26
Finished routing net counter<3>
Nets remaining: 25
Finished routing net counter<4>
Nets remaining: 24
Finished routing net counter<5>
Nets remaining: 23
Finished routing net counter<6>
Nets remaining: 22
Finished routing net counter<7>
Nets remaining: 21
Finished routing net done
Nets remaining: 20
Finished routing net dp<0>
Nets remaining: 19
Finished routing net dp<1>
Nets remaining: 18
Finished routing net dp<2>
Nets remaining: 17
Finished routing net dp<3>
Nets remaining: 16
Finished routing net dp<4>
Nets remaining: 15
Finished routing net dp<5>
Nets remaining: 14
Finished routing net dp<6>
Nets remaining: 13
Finished routing net dp<7>
Nets remaining: 12
Finished routing net dp<8>
Nets remaining: 11
Finished routing net sr<0>
Nets remaining: 10
Finished routing net sr<1>
Nets remaining: 9
Finished routing net sr<2>
Nets remaining: 8
Finished routing net sr<3>
Nets remaining: 7
Finished routing net sr<4>
Nets remaining: 6
Finished routing net sr<5>
Nets remaining: 5
Finished routing net sr<6>
Nets remaining: 4
Finished routing net sr<7>
Nets remaining: 3
Finished routing net start
Nets remaining: 2

----------------------------------------------
Progress: Stage 1 total routes completed: 510
Failed net routes: 2
----------------------------------------------
*** Running stage2 routing with options mask 10, effort 10
Nets remaining: 2
Best route of _90_ collides with nets: _0_<1> 
Ripping up blocking net _0_<1>
Nets remaining: 2
Best route of _59_ collides with nets: _117_<3> 
Ripping up blocking net _117_<3>
Nets remaining: 2
Nets remaining: 1

----------------------------------------------
Progress: Stage 2 total routes completed: 517
No failed routes!
----------------------------------------------
*** Running stage3 routing with defaults, 1st round
Finished routing net vdd
Nets remaining: 228
Finished routing net state<0>
Nets remaining: 227
Finished routing net _111_
Nets remaining: 226
Finished routing net clock_bF$buf4
Nets remaining: 225
Finished routing net clock_bF$buf3
Nets remaining: 224
Finished routing net clock_bF$buf2
Nets remaining: 223
Finished routing net _56__bF$buf4
Nets remaining: 222
Finished routing net _56__bF$buf3
Nets remaining: 221
Finished routing net _56__bF$buf2
Nets remaining: 220
Finished routing net clock_bF$buf1
Nets remaining: 219
Finished routing net clock_bF$buf0
Nets remaining: 218
Finished routing net _56__bF$buf1
Nets remaining: 217
Finished routing net _56__bF$buf0
Nets remaining: 216
Finished routing net state<3>
Nets remaining: 215
Finished routing net _98__bF$buf3
Nets remaining: 214
Finished routing net _98__bF$buf2
Nets remaining: 213
Finished routing net _98__bF$buf1
Nets remaining: 212
Finished routing net clock
Nets remaining: 211
Finished routing net _56_
Nets remaining: 210
Finished routing net _97__bF$buf3
Nets remaining: 209
Finished routing net _117_<2>
Nets remaining: 208
Finished routing net _120_<3>
Nets remaining: 207
Finished routing net _120_<4>
Nets remaining: 206
Finished routing net _120_<5>
Nets remaining: 205
Finished routing net _41_
Nets remaining: 204
Finished routing net _44_
Nets remaining: 203
Finished routing net _48_
Nets remaining: 202
Finished routing net _57_
Nets remaining: 201
Finished routing net N<5>
Nets remaining: 200
Finished routing net _98_
Nets remaining: 199
Finished routing net _98__bF$buf0
Nets remaining: 198
Finished routing net _97_
Nets remaining: 197
Finished routing net _97__bF$buf2
Nets remaining: 196
Finished routing net _97__bF$buf1
Nets remaining: 195
Finished routing net _97__bF$buf0
Nets remaining: 194
Finished routing net _117_<3>
Nets remaining: 193
Finished routing net _117_<4>
Nets remaining: 192
Finished routing net _117_<6>
Nets remaining: 191
Finished routing net _117_<0>
Nets remaining: 190
Finished routing net _120_<0>
Nets remaining: 189
Finished routing net _120_<7>
Nets remaining: 188
Finished routing net N<3>
Nets remaining: 187
Finished routing net _99_
Nets remaining: 186
Finished routing net _117_<5>
Nets remaining: 185
Finished routing net _101_
Nets remaining: 184
Finished routing net _117_<7>
Nets remaining: 183
Finished routing net _117_<1>
Nets remaining: 182
Finished routing net _103_
Nets remaining: 181
Finished routing net state<2>
Nets remaining: 180
Finished routing net _120_<1>
Nets remaining: 179
Finished routing net _120_<2>
Nets remaining: 178
Finished routing net _9_
Nets remaining: 177
Finished routing net _11_
Nets remaining: 176
Finished routing net _13_
Nets remaining: 175
Finished routing net _120_<6>
Nets remaining: 174
Finished routing net _17_
Nets remaining: 173
Finished routing net N<1>
Nets remaining: 172
Finished routing net _42_
Nets remaining: 171
Finished routing net N<4>
Nets remaining: 170
Finished routing net N<6>
Nets remaining: 169
Finished routing net N<7>
Nets remaining: 168
Finished routing net _100_
Nets remaining: 167
Finished routing net _102_
Nets remaining: 166
Finished routing net _105_
Nets remaining: 165
Finished routing net state<4>
Nets remaining: 164
Finished routing net state<1>
Nets remaining: 163
Finished routing net startbuf<0>
Nets remaining: 162
Finished routing net _109_
Nets remaining: 161
Finished routing net _119_<1>
Nets remaining: 160
Finished routing net _119_<2>
Nets remaining: 159
Finished routing net _114_
Nets remaining: 158
Finished routing net _119_<3>
Nets remaining: 157
Finished routing net _116_
Nets remaining: 156
Finished routing net _119_<4>
Nets remaining: 155
Finished routing net _119_<5>
Nets remaining: 154
Finished routing net _119_<6>
Nets remaining: 153
Finished routing net _119_<7>
Nets remaining: 152
Finished routing net _15_
Nets remaining: 151
Finished routing net _119_<8>
Nets remaining: 150
Finished routing net _119_<0>
Nets remaining: 149
Finished routing net _37_
Nets remaining: 148
Finished routing net N<2>
Nets remaining: 147
Finished routing net _50_
Nets remaining: 146
Finished routing net _59_
Nets remaining: 145
Finished routing net _64_
Nets remaining: 144
Finished routing net _67_
Nets remaining: 143
Finished routing net _71_
Nets remaining: 142
Finished routing net _73_
Nets remaining: 141
Finished routing net _77_
Nets remaining: 140
Finished routing net _78_
Nets remaining: 139
Finished routing net _81_
Nets remaining: 138
Finished routing net _85_
Nets remaining: 137
Finished routing net N<8>
Nets remaining: 136
Finished routing net _118_
Nets remaining: 135
Finished routing net _104_
Nets remaining: 134
Finished routing net _6_
Nets remaining: 133
Finished routing net _106_
Nets remaining: 132
Finished routing net _107_
Nets remaining: 131
Finished routing net _108_
Nets remaining: 130
Finished routing net startbuf<1>
Nets remaining: 129
Finished routing net _7_
Nets remaining: 128
Finished routing net _110_
Nets remaining: 127
Finished routing net _112_
Nets remaining: 126
Finished routing net _2_<1>
Nets remaining: 125
Finished routing net _113_
Nets remaining: 124
Finished routing net _2_<2>
Nets remaining: 123
Finished routing net _115_
Nets remaining: 122
Finished routing net _2_<3>
Nets remaining: 121
Finished routing net _8_
Nets remaining: 120
Finished routing net _2_<4>
Nets remaining: 119
Finished routing net _10_
Nets remaining: 118
Finished routing net _2_<5>
Nets remaining: 117
Finished routing net _12_
Nets remaining: 116
Finished routing net _2_<6>
Nets remaining: 115
Finished routing net _14_
Nets remaining: 114
Finished routing net _2_<7>
Nets remaining: 113
Finished routing net _16_
Nets remaining: 112
Finished routing net _2_<8>
Nets remaining: 111
Finished routing net _18_
Nets remaining: 110
Finished routing net N<0>
Nets remaining: 109
Finished routing net _19_
Nets remaining: 108
Finished routing net _2_<0>
Nets remaining: 107
Finished routing net _20_
Nets remaining: 106
Finished routing net _21_
Nets remaining: 105
Finished routing net _22_
Nets remaining: 104
Finished routing net _23_
Nets remaining: 103
Finished routing net _24_
Nets remaining: 102
Finished routing net _25_
Nets remaining: 101
Finished routing net _26_
Nets remaining: 100
Finished routing net _27_
Nets remaining: 99
Finished routing net _28_
Nets remaining: 98
Finished routing net _29_
Nets remaining: 97
Finished routing net _3_<0>
Nets remaining: 96
Finished routing net _30_
Nets remaining: 95
Finished routing net _3_<2>
Nets remaining: 94
Finished routing net _31_
Nets remaining: 93
Finished routing net _3_<3>
Nets remaining: 92
Finished routing net _32_
Nets remaining: 91
Finished routing net _3_<4>
Nets remaining: 90
Finished routing net _33_
Nets remaining: 89
Finished routing net _3_<5>
Nets remaining: 88
Finished routing net _34_
Nets remaining: 87
Finished routing net _3_<6>
Nets remaining: 86
Finished routing net _35_
Nets remaining: 85
Finished routing net _3_<7>
Nets remaining: 84
Finished routing net _36_
Nets remaining: 83
Finished routing net _38_
Nets remaining: 82
Finished routing net _39_
Nets remaining: 81
Finished routing net _0_<0>
Nets remaining: 80
Finished routing net _40_
Nets remaining: 79
Finished routing net _43_
Nets remaining: 78
Finished routing net _45_
Nets remaining: 77
Finished routing net _46_
Nets remaining: 76
Finished routing net _47_
Nets remaining: 75
Finished routing net _0_<1>
Nets remaining: 74
Finished routing net _49_
Nets remaining: 73
Finished routing net _51_
Nets remaining: 72
Finished routing net _52_
Nets remaining: 71
Finished routing net _53_
Nets remaining: 70
Finished routing net _0_<2>
Nets remaining: 69
Finished routing net _54_
Nets remaining: 68
Finished routing net _55_
Nets remaining: 67
Finished routing net _58_
Nets remaining: 66
Finished routing net _60_
Nets remaining: 65
Finished routing net _61_
Nets remaining: 64
Finished routing net _62_
Nets remaining: 63
Finished routing net _0_<3>
Nets remaining: 62
Finished routing net _63_
Nets remaining: 61
Finished routing net _65_
Nets remaining: 60
Finished routing net _66_
Nets remaining: 59
Finished routing net _68_
Nets remaining: 58
Finished routing net _69_
Nets remaining: 57
Finished routing net _0_<4>
Nets remaining: 56
Finished routing net _70_
Nets remaining: 55
Finished routing net _72_
Nets remaining: 54
Finished routing net _74_
Nets remaining: 53
Finished routing net _75_
Nets remaining: 52
Finished routing net _76_
Nets remaining: 51
Finished routing net _0_<5>
Nets remaining: 50
Finished routing net _79_
Nets remaining: 49
Finished routing net _80_
Nets remaining: 48
Finished routing net _82_
Nets remaining: 47
Finished routing net _83_
Nets remaining: 46
Finished routing net _84_
Nets remaining: 45
Finished routing net _86_
Nets remaining: 44
Finished routing net _87_
Nets remaining: 43
Finished routing net _0_<6>
Nets remaining: 42
Finished routing net _88_
Nets remaining: 41
Finished routing net _89_
Nets remaining: 40
Finished routing net _90_
Nets remaining: 39
Finished routing net _91_
Nets remaining: 38
Finished routing net _92_
Nets remaining: 37
Finished routing net _0_<7>
Nets remaining: 36
Finished routing net _93_
Nets remaining: 35
Finished routing net _94_
Nets remaining: 34
Finished routing net _95_
Nets remaining: 33
Finished routing net _1_
Nets remaining: 32
Finished routing net _96_
Nets remaining: 31
Finished routing net _3_<1>
Nets remaining: 30
Finished routing net _4_
Nets remaining: 29
Finished routing net _5_
Nets remaining: 28
Finished routing net reset
Nets remaining: 27
Finished routing net counter<0>
Nets remaining: 26
Finished routing net counter<1>
Nets remaining: 25
Finished routing net counter<2>
Nets remaining: 24
Finished routing net counter<3>
Nets remaining: 23
Finished routing net counter<4>
Nets remaining: 22
Finished routing net counter<5>
Nets remaining: 21
Finished routing net counter<6>
Nets remaining: 20
Finished routing net counter<7>
Nets remaining: 19
Finished routing net done
Nets remaining: 18
Finished routing net dp<0>
Nets remaining: 17
Finished routing net dp<1>
Nets remaining: 16
Finished routing net dp<2>
Nets remaining: 15
Finished routing net dp<3>
Nets remaining: 14
Finished routing net dp<4>
Nets remaining: 13
Finished routing net dp<5>
Nets remaining: 12
Finished routing net dp<6>
Nets remaining: 11
Finished routing net dp<7>
Nets remaining: 10
Finished routing net dp<8>
Nets remaining: 9
Finished routing net sr<0>
Nets remaining: 8
Finished routing net sr<1>
Nets remaining: 7
Finished routing net sr<2>
Nets remaining: 6
Finished routing net sr<3>
Nets remaining: 5
Finished routing net sr<4>
Nets remaining: 4
Finished routing net sr<5>
Nets remaining: 3
Finished routing net sr<6>
Nets remaining: 2
Finished routing net sr<7>
Nets remaining: 1
Finished routing net start
Nets remaining: 0

----------------------------------------------
Progress: Stage 3 total routes completed: 1029
No failed routes!
----------------------------------------------
*** Running stage3 routing with defaults, 2nd round
Finished routing net vdd
Nets remaining: 228
Finished routing net state<0>
Nets remaining: 227
Finished routing net _111_
Nets remaining: 226
Finished routing net clock_bF$buf4
Nets remaining: 225
Finished routing net clock_bF$buf3
Nets remaining: 224
Finished routing net clock_bF$buf2
Nets remaining: 223
Finished routing net _56__bF$buf4
Nets remaining: 222
Finished routing net _56__bF$buf3
Nets remaining: 221
Finished routing net _56__bF$buf2
Nets remaining: 220
Finished routing net clock_bF$buf1
Nets remaining: 219
Finished routing net clock_bF$buf0
Nets remaining: 218
Finished routing net _56__bF$buf1
Nets remaining: 217
Finished routing net _56__bF$buf0
Nets remaining: 216
Finished routing net state<3>
Nets remaining: 215
Finished routing net _98__bF$buf3
Nets remaining: 214
Finished routing net _98__bF$buf2
Nets remaining: 213
Finished routing net _98__bF$buf1
Nets remaining: 212
Finished routing net clock
Nets remaining: 211
Finished routing net _56_
Nets remaining: 210
Finished routing net _97__bF$buf3
Nets remaining: 209
Finished routing net _117_<2>
Nets remaining: 208
Finished routing net _120_<3>
Nets remaining: 207
Finished routing net _120_<4>
Nets remaining: 206
Finished routing net _120_<5>
Nets remaining: 205
Finished routing net _41_
Nets remaining: 204
Finished routing net _44_
Nets remaining: 203
Finished routing net _48_
Nets remaining: 202
Finished routing net _57_
Nets remaining: 201
Finished routing net N<5>
Nets remaining: 200
Finished routing net _98_
Nets remaining: 199
Finished routing net _98__bF$buf0
Nets remaining: 198
Finished routing net _97_
Nets remaining: 197
Finished routing net _97__bF$buf2
Nets remaining: 196
Finished routing net _97__bF$buf1
Nets remaining: 195
Finished routing net _97__bF$buf0
Nets remaining: 194
Finished routing net _117_<3>
Nets remaining: 193
Finished routing net _117_<4>
Nets remaining: 192
Finished routing net _117_<6>
Nets remaining: 191
Finished routing net _117_<0>
Nets remaining: 190
Finished routing net _120_<0>
Nets remaining: 189
Finished routing net _120_<7>
Nets remaining: 188
Finished routing net N<3>
Nets remaining: 187
Finished routing net _99_
Nets remaining: 186
Finished routing net _117_<5>
Nets remaining: 185
Finished routing net _101_
Nets remaining: 184
Finished routing net _117_<7>
Nets remaining: 183
Finished routing net _117_<1>
Nets remaining: 182
Finished routing net _103_
Nets remaining: 181
Finished routing net state<2>
Nets remaining: 180
Finished routing net _120_<1>
Nets remaining: 179
Finished routing net _120_<2>
Nets remaining: 178
Finished routing net _9_
Nets remaining: 177
Finished routing net _11_
Nets remaining: 176
Finished routing net _13_
Nets remaining: 175
Finished routing net _120_<6>
Nets remaining: 174
Finished routing net _17_
Nets remaining: 173
Finished routing net N<1>
Nets remaining: 172
Finished routing net _42_
Nets remaining: 171
Finished routing net N<4>
Nets remaining: 170
Finished routing net N<6>
Nets remaining: 169
Finished routing net N<7>
Nets remaining: 168
Finished routing net _100_
Nets remaining: 167
Finished routing net _102_
Nets remaining: 166
Finished routing net _105_
Nets remaining: 165
Finished routing net state<4>
Nets remaining: 164
Finished routing net state<1>
Nets remaining: 163
Finished routing net startbuf<0>
Nets remaining: 162
Finished routing net _109_
Nets remaining: 161
Finished routing net _119_<1>
Nets remaining: 160
Finished routing net _119_<2>
Nets remaining: 159
Finished routing net _114_
Nets remaining: 158
Finished routing net _119_<3>
Nets remaining: 157
Finished routing net _116_
Nets remaining: 156
Finished routing net _119_<4>
Nets remaining: 155
Finished routing net _119_<5>
Nets remaining: 154
Finished routing net _119_<6>
Nets remaining: 153
Finished routing net _119_<7>
Nets remaining: 152
Finished routing net _15_
Nets remaining: 151
Finished routing net _119_<8>
Nets remaining: 150
Finished routing net _119_<0>
Nets remaining: 149
Finished routing net _37_
Nets remaining: 148
Finished routing net N<2>
Nets remaining: 147
Finished routing net _50_
Nets remaining: 146
Finished routing net _59_
Nets remaining: 145
Finished routing net _64_
Nets remaining: 144
Finished routing net _67_
Nets remaining: 143
Finished routing net _71_
Nets remaining: 142
Finished routing net _73_
Nets remaining: 141
Finished routing net _77_
Nets remaining: 140
Finished routing net _78_
Nets remaining: 139
Finished routing net _81_
Nets remaining: 138
Finished routing net _85_
Nets remaining: 137
Finished routing net N<8>
Nets remaining: 136
Finished routing net _118_
Nets remaining: 135
Finished routing net _104_
Nets remaining: 134
Finished routing net _6_
Nets remaining: 133
Finished routing net _106_
Nets remaining: 132
Finished routing net _107_
Nets remaining: 131
Finished routing net _108_
Nets remaining: 130
Finished routing net startbuf<1>
Nets remaining: 129
Finished routing net _7_
Nets remaining: 128
Finished routing net _110_
Nets remaining: 127
Finished routing net _112_
Nets remaining: 126
Finished routing net _2_<1>
Nets remaining: 125
Finished routing net _113_
Nets remaining: 124
Finished routing net _2_<2>
Nets remaining: 123
Finished routing net _115_
Nets remaining: 122
Finished routing net _2_<3>
Nets remaining: 121
Finished routing net _8_
Nets remaining: 120
Finished routing net _2_<4>
Nets remaining: 119
Finished routing net _10_
Nets remaining: 118
Finished routing net _2_<5>
Nets remaining: 117
Finished routing net _12_
Nets remaining: 116
Finished routing net _2_<6>
Nets remaining: 115
Finished routing net _14_
Nets remaining: 114
Finished routing net _2_<7>
Nets remaining: 113
Finished routing net _16_
Nets remaining: 112
Finished routing net _2_<8>
Nets remaining: 111
Finished routing net _18_
Nets remaining: 110
Finished routing net N<0>
Nets remaining: 109
Finished routing net _19_
Nets remaining: 108
Finished routing net _2_<0>
Nets remaining: 107
Finished routing net _20_
Nets remaining: 106
Finished routing net _21_
Nets remaining: 105
Finished routing net _22_
Nets remaining: 104
Finished routing net _23_
Nets remaining: 103
Finished routing net _24_
Nets remaining: 102
Finished routing net _25_
Nets remaining: 101
Finished routing net _26_
Nets remaining: 100
Finished routing net _27_
Nets remaining: 99
Finished routing net _28_
Nets remaining: 98
Finished routing net _29_
Nets remaining: 97
Finished routing net _3_<0>
Nets remaining: 96
Finished routing net _30_
Nets remaining: 95
Finished routing net _3_<2>
Nets remaining: 94
Finished routing net _31_
Nets remaining: 93
Finished routing net _3_<3>
Nets remaining: 92
Finished routing net _32_
Nets remaining: 91
Finished routing net _3_<4>
Nets remaining: 90
Finished routing net _33_
Nets remaining: 89
Finished routing net _3_<5>
Nets remaining: 88
Finished routing net _34_
Nets remaining: 87
Finished routing net _3_<6>
Nets remaining: 86
Finished routing net _35_
Nets remaining: 85
Finished routing net _3_<7>
Nets remaining: 84
Finished routing net _36_
Nets remaining: 83
Finished routing net _38_
Nets remaining: 82
Finished routing net _39_
Nets remaining: 81
Finished routing net _0_<0>
Nets remaining: 80
Finished routing net _40_
Nets remaining: 79
Finished routing net _43_
Nets remaining: 78
Finished routing net _45_
Nets remaining: 77
Finished routing net _46_
Nets remaining: 76
Finished routing net _47_
Nets remaining: 75
Finished routing net _0_<1>
Nets remaining: 74
Finished routing net _49_
Nets remaining: 73
Finished routing net _51_
Nets remaining: 72
Finished routing net _52_
Nets remaining: 71
Finished routing net _53_
Nets remaining: 70
Finished routing net _0_<2>
Nets remaining: 69
Finished routing net _54_
Nets remaining: 68
Finished routing net _55_
Nets remaining: 67
Finished routing net _58_
Nets remaining: 66
Finished routing net _60_
Nets remaining: 65
Finished routing net _61_
Nets remaining: 64
Finished routing net _62_
Nets remaining: 63
Finished routing net _0_<3>
Nets remaining: 62
Finished routing net _63_
Nets remaining: 61
Finished routing net _65_
Nets remaining: 60
Finished routing net _66_
Nets remaining: 59
Finished routing net _68_
Nets remaining: 58
Finished routing net _69_
Nets remaining: 57
Finished routing net _0_<4>
Nets remaining: 56
Finished routing net _70_
Nets remaining: 55
Finished routing net _72_
Nets remaining: 54
Finished routing net _74_
Nets remaining: 53
Finished routing net _75_
Nets remaining: 52
Finished routing net _76_
Nets remaining: 51
Finished routing net _0_<5>
Nets remaining: 50
Finished routing net _79_
Nets remaining: 49
Finished routing net _80_
Nets remaining: 48
Finished routing net _82_
Nets remaining: 47
Finished routing net _83_
Nets remaining: 46
Finished routing net _84_
Nets remaining: 45
Finished routing net _86_
Nets remaining: 44
Finished routing net _87_
Nets remaining: 43
Finished routing net _0_<6>
Nets remaining: 42
Finished routing net _88_
Nets remaining: 41
Finished routing net _89_
Nets remaining: 40
Finished routing net _90_
Nets remaining: 39
Finished routing net _91_
Nets remaining: 38
Finished routing net _92_
Nets remaining: 37
Finished routing net _0_<7>
Nets remaining: 36
Finished routing net _93_
Nets remaining: 35
Finished routing net _94_
Nets remaining: 34
Finished routing net _95_
Nets remaining: 33
Finished routing net _1_
Nets remaining: 32
Finished routing net _96_
Nets remaining: 31
Finished routing net _3_<1>
Nets remaining: 30
Finished routing net _4_
Nets remaining: 29
Finished routing net _5_
Nets remaining: 28
Finished routing net reset
Nets remaining: 27
Finished routing net counter<0>
Nets remaining: 26
Finished routing net counter<1>
Nets remaining: 25
Finished routing net counter<2>
Nets remaining: 24
Finished routing net counter<3>
Nets remaining: 23
Finished routing net counter<4>
Nets remaining: 22
Finished routing net counter<5>
Nets remaining: 21
Finished routing net counter<6>
Nets remaining: 20
Finished routing net counter<7>
Nets remaining: 19
Finished routing net done
Nets remaining: 18
Finished routing net dp<0>
Nets remaining: 17
Finished routing net dp<1>
Nets remaining: 16
Finished routing net dp<2>
Nets remaining: 15
Finished routing net dp<3>
Nets remaining: 14
Finished routing net dp<4>
Nets remaining: 13
Finished routing net dp<5>
Nets remaining: 12
Finished routing net dp<6>
Nets remaining: 11
Finished routing net dp<7>
Nets remaining: 10
Finished routing net dp<8>
Nets remaining: 9
Finished routing net sr<0>
Nets remaining: 8
Finished routing net sr<1>
Nets remaining: 7
Finished routing net sr<2>
Nets remaining: 6
Finished routing net sr<3>
Nets remaining: 5
Finished routing net sr<4>
Nets remaining: 4
Finished routing net sr<5>
Nets remaining: 3
Finished routing net sr<6>
Nets remaining: 2
Finished routing net sr<7>
Nets remaining: 1
Finished routing net start
Nets remaining: 0

----------------------------------------------
Progress: Stage 3 total routes completed: 1541
No failed routes!
----------------------------------------------
*** Writing DEF file (default)
----------------------------------------------
Final: No failed routes!
----------------------------------------------
Router script ended on mié 4 nov 16:21:58 CST 2020
----------------------------------------------
Vesta static timing analysis tool
(c) 2013-2017 Tim Edwards, Open Circuit Design
----------------------------------------------

Parsing library "osu035_stdcells"
End of library at line 6636
Parsing module "map9v3"
Lib Read:  Processed 6637 lines.
Verilog netlist read:  Processed 232 lines.
Number of paths analyzed:  190

Top 20 maximum delay paths:
Path DFFSR_1/CLK to DFFSR_8/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_9/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_10/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_11/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_12/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_13/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_14/D delay 2466.24 ps
Path DFFSR_1/CLK to DFFSR_7/D delay 2413.14 ps
Path DFFSR_1/CLK to DFFSR_6/D delay 2413.14 ps
Path DFFSR_4/CLK to DFFSR_8/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_9/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_10/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_11/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_12/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_13/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_14/D delay 2285.39 ps
Path DFFSR_4/CLK to DFFSR_7/D delay 2233.91 ps
Path DFFSR_4/CLK to DFFSR_6/D delay 2233.91 ps
Path DFFSR_4/CLK to DFFSR_19/D delay 1968.44 ps
Path DFFSR_4/CLK to DFFSR_21/D delay 1952.25 ps
Computed maximum clock frequency (zero slack) = 405.476 MHz
-----------------------------------------

Number of paths analyzed:  190

Top 20 minimum delay paths:
Path DFFSR_32/CLK to DFFSR_33/D delay 370.566 ps
Path DFFSR_3/CLK to DFFSR_5/D delay 451.775 ps
Path DFFSR_2/CLK to DFFSR_1/D delay 470.455 ps
Path DFFSR_6/CLK to output pin dp[0] delay 472.527 ps
Path DFFSR_11/CLK to output pin dp[5] delay 472.527 ps
Path DFFSR_7/CLK to output pin dp[1] delay 472.527 ps
Path DFFSR_12/CLK to output pin dp[6] delay 472.527 ps
Path DFFSR_8/CLK to output pin dp[2] delay 472.527 ps
Path DFFSR_13/CLK to output pin dp[7] delay 472.527 ps
Path DFFSR_9/CLK to output pin dp[3] delay 472.527 ps
Path DFFSR_14/CLK to output pin dp[8] delay 472.527 ps
Path DFFSR_10/CLK to output pin dp[4] delay 472.527 ps
Path DFFSR_15/CLK to output pin done delay 472.527 ps
Path DFFSR_5/CLK to DFFSR_2/D delay 514.222 ps
Path DFFSR_21/CLK to output pin counter[5] delay 523.316 ps
Path DFFSR_17/CLK to output pin counter[1] delay 523.316 ps
Path DFFSR_26/CLK to output pin sr[2] delay 533.38 ps
Path DFFSR_25/CLK to output pin sr[1] delay 533.38 ps
Path DFFSR_30/CLK to output pin sr[6] delay 533.38 ps
Path DFFSR_15/CLK to DFFSR_15/D delay 545.726 ps
Design meets minimum hold timing.
-----------------------------------------

Number of paths analyzed:  104

Top 20 maximum delay paths:
Path input pin N[1] to DFFSR_23/D delay 1125.19 ps
Path input pin N[2] to DFFSR_23/D delay 1104.81 ps
Path input pin N[1] to DFFSR_22/D delay 1052.25 ps
Path input pin N[2] to DFFSR_22/D delay 1031.93 ps
Path input pin N[1] to DFFSR_21/D delay 1031.11 ps
Path input pin N[2] to DFFSR_21/D delay 1010.67 ps
Path input pin N[3] to DFFSR_23/D delay 967.06 ps
Path input pin N[1] to DFFSR_20/D delay 945.932 ps
Path input pin N[1] to DFFSR_19/D delay 937.367 ps
Path input pin N[2] to DFFSR_20/D delay 925.486 ps
Path input pin N[2] to DFFSR_19/D delay 916.836 ps
Path input pin N[3] to DFFSR_22/D delay 892.74 ps
Path input pin N[4] to DFFSR_23/D delay 889.123 ps
Path input pin N[3] to DFFSR_21/D delay 874.845 ps
Path input pin N[4] to DFFSR_22/D delay 815.681 ps
Path input pin N[1] to DFFSR_18/D delay 810.062 ps
Path input pin N[4] to DFFSR_21/D delay 795.524 ps
Path input pin N[2] to DFFSR_18/D delay 789.783 ps
Path input pin N[3] to DFFSR_20/D delay 789.65 ps
Path input pin N[3] to DFFSR_19/D delay 783.179 ps
-----------------------------------------

Number of paths analyzed:  104

Top 20 minimum delay paths:
Path input pin start to DFFSR_32/D delay 0 ps
Path input pin N[1] to DFFSR_16/D delay 128.183 ps
Path input pin N[0] to DFFSR_6/D delay 154.438 ps
Path input pin clock to DFFSR_30/CLK delay 169.156 ps
Path input pin clock to DFFSR_25/CLK delay 169.156 ps
Path input pin clock to DFFSR_20/CLK delay 169.156 ps
Path input pin clock to DFFSR_15/CLK delay 169.156 ps
Path input pin clock to DFFSR_10/CLK delay 169.156 ps
Path input pin clock to DFFSR_5/CLK delay 169.156 ps
Path input pin clock to DFFSR_29/CLK delay 169.156 ps
Path input pin clock to DFFSR_24/CLK delay 169.156 ps
Path input pin clock to DFFSR_19/CLK delay 169.156 ps
Path input pin clock to DFFSR_14/CLK delay 169.156 ps
Path input pin clock to DFFSR_9/CLK delay 169.156 ps
Path input pin clock to DFFSR_4/CLK delay 169.156 ps
Path input pin clock to DFFSR_33/CLK delay 182.114 ps
Path input pin clock to DFFSR_28/CLK delay 182.114 ps
Path input pin clock to DFFSR_23/CLK delay 182.114 ps
Path input pin clock to DFFSR_18/CLK delay 182.114 ps
Path input pin clock to DFFSR_13/CLK delay 182.114 ps
-----------------------------------------

